# https://taskfile.dev

version: "2"

vars:

env:

tasks:
  default:
    desc: Executes all the tests then build the binary.
    cmds:
      - task: test
      - task: build

  test:
    desc: Run all the go tests.
    cmds:
      - gofmt -w .
      - go test ./... -short -count=1

  test-verbose:
    desc: Run all the go tests in verbose mode.
    cmds:
      - gofmt -w .
      - go test ./... -v -count=1 

  test-single:
    desc: Run all the go tests in verbose mode from a single test file.
    cmds:
      - gofmt -w .
      - go test ./... -run={{.CASE}} -v -count=1 

  coverage:
    desc: Open test coverage in browser
    cmds:
      - go test -coverprofile=c.out -coverpkg=./... -covermode=atomic ./...
      - go tool cover -html=c.out

  lint-display:
    desc: Call gofmt, go vet and go lint
    cmds:
      - test -z "$(find -path './vendor' -prune -false -o -name '*.go' | xargs gofmt -l -d)"
      - go vet ./...
      - golangci-lint run

  lint:
    desc: Test gofmt, go vet and go lint
    cmds:
      - test -z "$(find -path './vendor' -prune -false -o -name '*.go' | xargs gofmt -l)"
      - go vet ./...
      - golangci-lint run

  build:
    desc: Build the go binary.
    cmds:
      - cd axon-cron && task build
      - cd axon-debug && task build
      - cd axon-file-reader && task build
      - cd axon-function-js && task build
      - cd axon-influxdb-writer && task build

  install:
    desc: Install the binaries to the local machine
    cmds:
      - cd axon-cron && task install
      - cd axon-debug && task install
      - cd axon-file-reader && task install
      - cd axon-function-js && task install
      - cd axon-influxdb-writer && task install

  clean:
    desc: Clean temporary files and folders
    cmds:
      - cd axon-cron && task clean
      - cd axon-debug && task clean
      - cd axon-file-reader && task clean
      - cd axon-function-js && task clean
      - cd axon-influxdb-writer && task clean

